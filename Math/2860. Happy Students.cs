//Leetcode 2860. Happy Students med
//题意：给定一个长度为n的0索引整数数组nums，其中n是班级中学生的总数。班级老师试图选择一组学生，使得所有学生都能保持开心。
//第i个学生会在以下两种情况下变得开心：
//该学生被选中，并且选中的学生总数严格大于nums[i]。
//该学生未被选中，并且选中的学生总数严格小于nums[i]。
//返回使得每个学生都能开心的选择学生组的方法总数。
//思路：将nums按照从小到大排序后，
//如果第i个同学选中并且happy，那么比他小的同学必须选中才能happy。
//如果第j个同学没选中并且happy，那么比他大的同学也一定要不被选中才能happy。
//因为所有的同学都happy，所有选中的同学必然是相邻的，所有没有选中的同学必然是相邻的。
//所以我们需要找到这个分界点。只需要遍历所有的间隔位置，
//判断如果左边选中、右边不选中，是否能够满足让他们两个happy（其他人自然自动满足）。
//注意这样的分界点没有连续性，它可能离散地出现在任何位置。
//此外注意全部选中和全部不选两种特殊情况。
//时间复杂度：O(n)
//空间复杂度：O(1)
        public int CountWays(IList<int> nums)
        {
            List<int> list = nums.ToList();
            int n = list.Count;
            list.Sort();
            int res = 0;
            for (int i = 0; i + 1 < n; i++)
            {
                if ((i + 1 > list[i]) && (i + 1 < list[i + 1]))
                {
                    res++;
                }
            }

            if (0 < list[0])
            {
                res++;
            }
            if (n > list[n - 1])
            {
                res++;
            }

            return res;

        }